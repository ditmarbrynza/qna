env:
  RUBY_VERSION: 2.6
  POSTGRESQL_USERNAME: postgres
  POSTGRESQL_PASSWORD: postgres
  POSTGRES_DB: postgres

name: Rails tests
on: [push,pull_request]
jobs:
  rubocop-test:
    name: Rubocop
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
      - name: Install Rubocop
        run: gem install rubocop -v 0.74.0
      - name: Check code
        run: rubocop
  rspec-test:
    name: Rspec
    needs: rubocop-test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
        - 5432:5432
        env:
          POSTGRES_USER: ${{ env.POSTGRESQL_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Install postgres client
        run: sudo apt-get install libpq-dev

      - name: Install dependencies
        run: |
          gem install bundler
          bundler install

      - name: Create database
        run: |
          bundler exec rails db:create RAILS_ENV=test
          bundler exec rails db:migrate RAILS_ENV=test
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.19.0

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            
      - name: Install packages
        run: |
          yarn install --pure-lockfile
          
      - name: Run tests
        run: bundle exec rspec
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

      - name: Upload coverage results
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: coverage report
          path: coverage
